name: build

on:
  push:
    branches:
      - master
    tags:
      - '*'
    paths-ignore:
      - '*.md'
  pull_request:
    paths-ignore:
      - '*.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
        id: go

      - name: checkout
        uses: actions/checkout@v3

      - name: build and test
        run: |
          go test -v -timeout=60s -race -covermode=atomic -coverprofile=$GITHUB_WORKSPACE/profile.cov  ./...
        working-directory: app
        env:
          GOFLAGS: "-mod=vendor"
          TZ: "UTC"

      - name: install golangci-lint and goveralls
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.46.2
          GO111MODULE=off go get -u github.com/mattn/goveralls

      - name: run linters
        run: $GITHUB_WORKSPACE/golangci-lint run
        env:
          GOFLAGS: "-mod=vendor"
          TZ: "UTC"

      - name: submit coverage
        run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: available platforms
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
